{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport resolveProps from '@mui/utils/resolveProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\nfunction DefaultPropsProvider({\n  value,\n  children\n}) {\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\n    value: value,\n    children: children\n  });\n}\n_c = DefaultPropsProvider;\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * @ignore\r\n   */\n  value: PropTypes.object\n} : void 0;\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name]) {\n    return props;\n  }\n  const config = theme.components[name];\n  if (config.defaultProps) {\n    // compatible with v5 signature\n    return resolveProps(config.defaultProps, props);\n  }\n  if (!config.styleOverrides && !config.variants) {\n    // v6 signature, no property 'defaultProps'\n    return resolveProps(config, props);\n  }\n  return props;\n}\nexport function useDefaultProps({\n  props,\n  name\n}) {\n  _s();\n  const ctx = React.useContext(PropsContext);\n  return getThemeProps({\n    props,\n    name,\n    theme: {\n      components: ctx\n    }\n  });\n}\n_s(useDefaultProps, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport default DefaultPropsProvider;\nvar _c;\n$RefreshReg$(_c, \"DefaultPropsProvider\");","map":{"version":3,"names":["_s","$RefreshSig$","React","PropTypes","resolveProps","jsx","_jsx","PropsContext","createContext","undefined","DefaultPropsProvider","value","children","Provider","_c","process","env","NODE_ENV","propTypes","node","object","getThemeProps","params","theme","name","props","components","config","defaultProps","styleOverrides","variants","useDefaultProps","ctx","useContext","$RefreshReg$"],"sources":["C:/Users/thele/React-my-app/ui/src/node_modules/@mui/system/esm/DefaultPropsProvider/DefaultPropsProvider.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport resolveProps from '@mui/utils/resolveProps';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\r\nfunction DefaultPropsProvider({\r\n  value,\r\n  children\r\n}) {\r\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\r\n    value: value,\r\n    children: children\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  value: PropTypes.object\r\n} : void 0;\r\nfunction getThemeProps(params) {\r\n  const {\r\n    theme,\r\n    name,\r\n    props\r\n  } = params;\r\n  if (!theme || !theme.components || !theme.components[name]) {\r\n    return props;\r\n  }\r\n  const config = theme.components[name];\r\n  if (config.defaultProps) {\r\n    // compatible with v5 signature\r\n    return resolveProps(config.defaultProps, props);\r\n  }\r\n  if (!config.styleOverrides && !config.variants) {\r\n    // v6 signature, no property 'defaultProps'\r\n    return resolveProps(config, props);\r\n  }\r\n  return props;\r\n}\r\nexport function useDefaultProps({\r\n  props,\r\n  name\r\n}) {\r\n  const ctx = React.useContext(PropsContext);\r\n  return getThemeProps({\r\n    props,\r\n    name,\r\n    theme: {\r\n      components: ctx\r\n    }\r\n  });\r\n}\r\nexport default DefaultPropsProvider;"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;AAEb,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,YAAY,GAAG,aAAaL,KAAK,CAACM,aAAa,CAACC,SAAS,CAAC;AAChE,SAASC,oBAAoBA,CAAC;EAC5BC,KAAK;EACLC;AACF,CAAC,EAAE;EACD,OAAO,aAAaN,IAAI,CAACC,YAAY,CAACM,QAAQ,EAAE;IAC9CF,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AAACE,EAAA,GARQJ,oBAAoB;AAS7BK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGP,oBAAoB,CAACQ,SAAS,CAAC,yBAAyB;EAC9F;EACA;EACA;EACA;EACA;AACF;AACA;EACEN,QAAQ,EAAET,SAAS,CAACgB,IAAI;EACxB;AACF;AACA;EACER,KAAK,EAAER,SAAS,CAACiB;AACnB,CAAC,GAAG,KAAK,CAAC;AACV,SAASC,aAAaA,CAACC,MAAM,EAAE;EAC7B,MAAM;IACJC,KAAK;IACLC,IAAI;IACJC;EACF,CAAC,GAAGH,MAAM;EACV,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACG,UAAU,IAAI,CAACH,KAAK,CAACG,UAAU,CAACF,IAAI,CAAC,EAAE;IAC1D,OAAOC,KAAK;EACd;EACA,MAAME,MAAM,GAAGJ,KAAK,CAACG,UAAU,CAACF,IAAI,CAAC;EACrC,IAAIG,MAAM,CAACC,YAAY,EAAE;IACvB;IACA,OAAOxB,YAAY,CAACuB,MAAM,CAACC,YAAY,EAAEH,KAAK,CAAC;EACjD;EACA,IAAI,CAACE,MAAM,CAACE,cAAc,IAAI,CAACF,MAAM,CAACG,QAAQ,EAAE;IAC9C;IACA,OAAO1B,YAAY,CAACuB,MAAM,EAAEF,KAAK,CAAC;EACpC;EACA,OAAOA,KAAK;AACd;AACA,OAAO,SAASM,eAAeA,CAAC;EAC9BN,KAAK;EACLD;AACF,CAAC,EAAE;EAAAxB,EAAA;EACD,MAAMgC,GAAG,GAAG9B,KAAK,CAAC+B,UAAU,CAAC1B,YAAY,CAAC;EAC1C,OAAOc,aAAa,CAAC;IACnBI,KAAK;IACLD,IAAI;IACJD,KAAK,EAAE;MACLG,UAAU,EAAEM;IACd;EACF,CAAC,CAAC;AACJ;AAAChC,EAAA,CAZe+B,eAAe;AAa/B,eAAerB,oBAAoB;AAAC,IAAAI,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}