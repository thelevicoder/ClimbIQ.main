{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme,\n  ownerState\n}) => {\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: marginValue != null ? marginValue : -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroup = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function AvatarGroup(inProps, ref) {\n  _s();\n  var _slotProps$additional;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n}, \"CAIm94WeTMtiWHBIKb3BCV2u1bk=\", false, function () {\n  return [useDefaultProps, useUtilityClasses];\n})), \"CAIm94WeTMtiWHBIKb3BCV2u1bk=\", false, function () {\n  return [useDefaultProps, useUtilityClasses];\n});\n_c2 = AvatarGroup;\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * The avatars to stack.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * This prop is an alias for the `slotProps` prop.\r\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\r\n   *\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\r\n   * Max avatars to show before +x.\r\n   * @default 5\r\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\r\n   * custom renderer of extraAvatars\r\n   * @param {number} surplus number of extra avatars\r\n   * @returns {React.ReactNode} custom element to display\r\n   */\n  renderSurplus: PropTypes.func,\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\r\n   *\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\r\n   * Spacing between avatars.\r\n   * @default 'medium'\r\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\r\n   * The total number of avatars. Used for calculating the number of extra avatars.\r\n   * @default children.length\r\n   */\n  total: PropTypes.number,\n  /**\r\n   * The variant to use.\r\n   * @default 'circular'\r\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;\nvar _c, _c2;\n$RefreshReg$(_c, \"AvatarGroup$React.forwardRef\");\n$RefreshReg$(_c2, \"AvatarGroup\");","map":{"version":3,"names":["_s","$RefreshSig$","_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","composeClasses","styled","useDefaultProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsx","_jsx","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","marginValue","spacing","undefined","border","vars","palette","background","default","boxSizing","marginLeft","display","flexDirection","AvatarGroup","forwardRef","_c","inProps","ref","_slotProps$additional","children","childrenProp","className","component","componentsProps","max","renderSurplus","slotProps","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","additionalAvatarSlotProps","additionalAvatar","as","slice","reverse","map","cloneElement","_c2","propTypes","node","object","string","elementType","shape","number","Error","func","oneOfType","oneOf","sx","arrayOf","bool","$RefreshReg$"],"sources":["C:/Users/thele/React-my-app/ui/src/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"sourcesContent":["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isFragment } from 'react-is';\r\nimport clsx from 'clsx';\r\nimport chainPropTypes from '@mui/utils/chainPropTypes';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport styled from '../styles/styled';\r\nimport { useDefaultProps } from '../DefaultPropsProvider';\r\nimport Avatar, { avatarClasses } from '../Avatar';\r\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst SPACINGS = {\r\n  small: -16,\r\n  medium: null\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    avatar: ['avatar']\r\n  };\r\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\r\n};\r\nconst AvatarGroupRoot = styled('div', {\r\n  name: 'MuiAvatarGroup',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => _extends({\r\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\r\n  }, styles.root)\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\r\n  return {\r\n    [`& .${avatarClasses.root}`]: {\r\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\r\n      boxSizing: 'content-box',\r\n      marginLeft: marginValue != null ? marginValue : -8,\r\n      '&:last-child': {\r\n        marginLeft: 0\r\n      }\r\n    },\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse'\r\n  };\r\n});\r\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\r\n  var _slotProps$additional;\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiAvatarGroup'\r\n  });\r\n  const {\r\n      children: childrenProp,\r\n      className,\r\n      component = 'div',\r\n      componentsProps = {},\r\n      max = 5,\r\n      renderSurplus,\r\n      slotProps = {},\r\n      spacing = 'medium',\r\n      total,\r\n      variant = 'circular'\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  let clampedMax = max < 2 ? 2 : max;\r\n  const ownerState = _extends({}, props, {\r\n    max,\r\n    spacing,\r\n    component,\r\n    variant\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const children = React.Children.toArray(childrenProp).filter(child => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n    return /*#__PURE__*/React.isValidElement(child);\r\n  });\r\n  const totalAvatars = total || children.length;\r\n  if (totalAvatars === clampedMax) {\r\n    clampedMax += 1;\r\n  }\r\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\r\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\r\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\r\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\r\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\r\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\r\n    as: component,\r\n    ownerState: ownerState,\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other, {\r\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\r\n      variant: variant\r\n    }, additionalAvatarSlotProps, {\r\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\r\n      children: extraAvatarsElement\r\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\r\n      return /*#__PURE__*/React.cloneElement(child, {\r\n        className: clsx(child.props.className, classes.avatar),\r\n        variant: child.props.variant || variant\r\n      });\r\n    })]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The avatars to stack.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * This prop is an alias for the `slotProps` prop.\r\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\r\n   *\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.shape({\r\n    additionalAvatar: PropTypes.object\r\n  }),\r\n  /**\r\n   * Max avatars to show before +x.\r\n   * @default 5\r\n   */\r\n  max: chainPropTypes(PropTypes.number, props => {\r\n    if (props.max < 2) {\r\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\r\n    }\r\n    return null;\r\n  }),\r\n  /**\r\n   * custom renderer of extraAvatars\r\n   * @param {number} surplus number of extra avatars\r\n   * @returns {React.ReactNode} custom element to display\r\n   */\r\n  renderSurplus: PropTypes.func,\r\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\r\n   *\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    additionalAvatar: PropTypes.object\r\n  }),\r\n  /**\r\n   * Spacing between avatars.\r\n   * @default 'medium'\r\n   */\r\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The total number of avatars. Used for calculating the number of extra avatars.\r\n   * @default children.length\r\n   */\r\n  total: PropTypes.number,\r\n  /**\r\n   * The variant to use.\r\n   * @default 'circular'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\r\n} : void 0;\r\nexport default AvatarGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}