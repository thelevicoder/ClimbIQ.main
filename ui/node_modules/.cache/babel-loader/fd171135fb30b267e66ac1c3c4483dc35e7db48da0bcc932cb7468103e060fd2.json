{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  _s();\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}\n_s(useThemeProps, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});","map":{"version":3,"names":["_s","$RefreshSig$","getThemeProps","useTheme","useThemeProps","props","name","defaultTheme","themeId","theme","mergedProps"],"sources":["C:/Users/thele/React-my-app/ui/src/node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"sourcesContent":["'use client';\r\n\r\nimport getThemeProps from './getThemeProps';\r\nimport useTheme from '../useTheme';\r\nexport default function useThemeProps({\r\n  props,\r\n  name,\r\n  defaultTheme,\r\n  themeId\r\n}) {\r\n  let theme = useTheme(defaultTheme);\r\n  if (themeId) {\r\n    theme = theme[themeId] || theme;\r\n  }\r\n  const mergedProps = getThemeProps({\r\n    theme,\r\n    name,\r\n    props\r\n  });\r\n  return mergedProps;\r\n}"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;AAEb,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,aAAa;AAClC,eAAe,SAASC,aAAaA,CAAC;EACpCC,KAAK;EACLC,IAAI;EACJC,YAAY;EACZC;AACF,CAAC,EAAE;EAAAR,EAAA;EACD,IAAIS,KAAK,GAAGN,QAAQ,CAACI,YAAY,CAAC;EAClC,IAAIC,OAAO,EAAE;IACXC,KAAK,GAAGA,KAAK,CAACD,OAAO,CAAC,IAAIC,KAAK;EACjC;EACA,MAAMC,WAAW,GAAGR,aAAa,CAAC;IAChCO,KAAK;IACLH,IAAI;IACJD;EACF,CAAC,CAAC;EACF,OAAOK,WAAW;AACpB;AAACV,EAAA,CAhBuBI,aAAa;EAAA,QAMvBD,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}