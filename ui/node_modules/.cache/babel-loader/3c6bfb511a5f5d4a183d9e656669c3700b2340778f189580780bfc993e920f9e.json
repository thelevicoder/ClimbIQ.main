{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport { usePreviousProps } from '@mui/utils';\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Badge](https://next.mui.com/base-ui/react-badge/#hook)\r\n *\r\n * API:\r\n *\r\n * - [useBadge API](https://next.mui.com/base-ui/react-badge/hooks-api/#use-badge)\r\n */\nfunction useBadge(parameters) {\n  _s();\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\n_s(useBadge, \"62UkgQbQJOKgAZQAnWQozo/eV3k=\", false, function () {\n  return [usePreviousProps];\n});\nexport default useBadge;","map":{"version":3,"names":["_s","$RefreshSig$","usePreviousProps","useBadge","parameters","badgeContent","badgeContentProp","invisible","invisibleProp","max","maxProp","showZero","prevProps","displayValue","Number"],"sources":["C:/Users/thele/React-my-app/ui/src/node_modules/@mui/material/Badge/useBadge.js"],"sourcesContent":["'use client';\r\n\r\nimport { usePreviousProps } from '@mui/utils';\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Badge](https://next.mui.com/base-ui/react-badge/#hook)\r\n *\r\n * API:\r\n *\r\n * - [useBadge API](https://next.mui.com/base-ui/react-badge/hooks-api/#use-badge)\r\n */\r\nfunction useBadge(parameters) {\r\n  const {\r\n    badgeContent: badgeContentProp,\r\n    invisible: invisibleProp = false,\r\n    max: maxProp = 99,\r\n    showZero = false\r\n  } = parameters;\r\n  const prevProps = usePreviousProps({\r\n    badgeContent: badgeContentProp,\r\n    max: maxProp\r\n  });\r\n  let invisible = invisibleProp;\r\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\r\n    invisible = true;\r\n  }\r\n  const {\r\n    badgeContent,\r\n    max = maxProp\r\n  } = invisible ? prevProps : parameters;\r\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\r\n  return {\r\n    badgeContent,\r\n    invisible,\r\n    max,\r\n    displayValue\r\n  };\r\n}\r\nexport default useBadge;"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;AAEb,SAASC,gBAAgB,QAAQ,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,UAAU,EAAE;EAAAJ,EAAA;EAC5B,MAAM;IACJK,YAAY,EAAEC,gBAAgB;IAC9BC,SAAS,EAAEC,aAAa,GAAG,KAAK;IAChCC,GAAG,EAAEC,OAAO,GAAG,EAAE;IACjBC,QAAQ,GAAG;EACb,CAAC,GAAGP,UAAU;EACd,MAAMQ,SAAS,GAAGV,gBAAgB,CAAC;IACjCG,YAAY,EAAEC,gBAAgB;IAC9BG,GAAG,EAAEC;EACP,CAAC,CAAC;EACF,IAAIH,SAAS,GAAGC,aAAa;EAC7B,IAAIA,aAAa,KAAK,KAAK,IAAIF,gBAAgB,KAAK,CAAC,IAAI,CAACK,QAAQ,EAAE;IAClEJ,SAAS,GAAG,IAAI;EAClB;EACA,MAAM;IACJF,YAAY;IACZI,GAAG,GAAGC;EACR,CAAC,GAAGH,SAAS,GAAGK,SAAS,GAAGR,UAAU;EACtC,MAAMS,YAAY,GAAGR,YAAY,IAAIS,MAAM,CAACT,YAAY,CAAC,GAAGI,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAGJ,YAAY;EAC1F,OAAO;IACLA,YAAY;IACZE,SAAS;IACTE,GAAG;IACHI;EACF,CAAC;AACH;AAACb,EAAA,CA1BQG,QAAQ;EAAA,QAOGD,gBAAgB;AAAA;AAoBpC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}